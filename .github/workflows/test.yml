name: Test against RabbitMQ stable

on:
  push:
    branches:
      - 2.x.x-stable
  pull_request:
    branches:
      - 2.x.x-stable
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5
      - name: Checkout tls-gen
        uses: actions/checkout@v5
        with:
          repository: rabbitmq/tls-gen
          path: './tls-gen'
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Start RabbitMQ application
        run: ci/start-broker.sh
      - name: Test
        run: |
          ./mvnw verify -Drabbitmqctl.bin=DOCKER:rabbitmq \
            -Dtest-broker.A.nodename=rabbit@$(hostname) \
            -Dtest-tls-certs.dir=tls-gen/basic \
            --no-transfer-progress
      - name: Stop broker
        run: docker stop rabbitmq && docker rm rabbitmq
      - name: Publish snapshot
        run: ./mvnw clean deploy -Psnapshots -DskipITs -DskipTests --no-transfer-progress
        if: ${{ github.event_name != 'pull_request' }}
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Trigger Compliance Test Suite run
        if: ${{ github.event_name != 'pull_request' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: new_client_snapshot
          repository: rabbitmq/rabbitmq-jms-cts
          token: ${{ secrets.CI_GITHUB_TOKEN }}
      - name: Generate documentation
        if: ${{ github.event_name != 'pull_request' }}
        run: make doc
      - name: Publish documentation
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git config user.name "rabbitmq-ci"
          git config user.email "rabbitmq-ci@users.noreply.github.com"
          ci/publish-documentation-to-github-pages.sh
